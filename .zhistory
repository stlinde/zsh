chsh -s $(which zsh)
cd usr/config/zsh/plugins
git submodule add -f https://github.com/sindresorhus/pure.git
vi .zshrc
sudo apt install ./rustdesk-1.2.3-2-x86_64.deb
sudo add-apt-repository ppa:yubico/stable
sudo apt-get update
sudo apt-get install libpam-yubico
mkdir -p ~/.config/Yubico
sudo apt-get install libpam-u2f
pamu2fcfg > ~/.config/Yubico/u2f_keys
cd data/tools
gh repo clone Ygg
gh repo clone Yggdrasil
mv ~/Downloads/cloudflared-linux-amd64 /home/slinde/bin/cloudflared
chmod +x $PBIN/cloudflared
cloudflared
cd Yggdrasil
sudo apt uninstall rustdesk
sudo apt remove rustdesk
sudo apt install remmina
remmina --help
remmina --connect=group_rdp_yggdrasil_localhost-1337.remmina
./yggrdp.sh
nvim .zshrc
source .zshrc
nvim build-emacs.sh
chmod +x build-emacs.sh
git submodule add -f https://github.com/stlinde/emacs.git
git add usr/config/zsh/zshrc
git commit -m "changed prompt and added emacs\
"
git config --global user.email "sebastian@hempellinde.com"
git config --global user.name "Sebastian Hempel Linde"
git commit -m "feat: changed prompt and added emacs"
git push
killall emacs
cd slinde/data/tools
cd emacs
sudo make uninstall
vi build-emacs.sh
./build-emacs.sh
mv emacs $HOME/data/tools
vi yggdrasil.rdp
sudo apt install remmina-plugin-rdp
sudo apt install build-essentials
ld
mkdir notes
mkdir notes/personal
mkdir notes/work
git clone https://github.com/dharmx/walls.git
git clone --shallow https://github.com/dharmx/walls.git
git clone --depth=1 https://github.com/dharmx/walls.git
cd walls
rm responses.txt
rm logs.txt
rm snake_case_log.txt
rm .git
rm -rf .github
rm m-26.jp
mv * ../
rmdir walls
sudo apt install pix
sudo apt install pix-image-viewer
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
chmod +x ./.cargo/env
./.cargo/env
. "$HOME/.cargo/env"
cargo
cargo install pix-image-viewer
pix
pix --help
cd data/pictures
pix pictures
sudo apt install xviewer
cargo remove pix
sudo apt install feh
feh
feh pictures
cd pictures
cd abstract
feh two_black_and_white_images_of_mountains.jpg
feh a_black_and_white_drawing_of_a_person_with_a_blindfold.png a_black_and_white_image_of_a_group_of_people.png a_black_and_white_logo.png a_black_and_white_maze.png a_black_and_white_picture_of_mountains_and_trees.png a_colorful_background_with_different_shapes_and_patterns.png a_drawing_of_a_sun_and_a_ball.png a_group_of_buildings_with_blue_awnings.png a_man_sitting_in_a_chair.png a_painting_of_a_building_in_a_dark_landscape.png a_painting_of_a_building_in_the_desert.png a_painting_of_a_man_with_a_face_on_his_head.png a_painting_of_a_mountain.png a_pink_and_green_object_with_circles_and_dots.png a_pyramids_with_palm_trees.png a_skeleton_standing_on_a_pile_of_skulls.png a_statue_of_a_woman_with_wings_and_a_plant.png a_statue_of_a_woman_with_wings_and_wings.png a_tree_and_a_rock.png a_white_drawing_of_a_person_with_a_mask_on_his_head.png a_white_swirly_circle_on_a_black_background.png a_woman_with_long_hair_wearing_sunglasses.png 
cd mountain
feh *.png
cd dreamcore
feh a_body_of_water_with_rain_falling_on_it.jpg a_building_next_to_a_river.jpg a_building_on_a_foggy_day.jpg a_bus_on_a_foggy_day.jpg a_chairlifts_on_a_mountain.jpg a_dark_room_with_a_large_window.jpg a_gas_station_at_night.jpg a_gas_station_with_lights_on_the_front_and_a_car_parked_in_the_front.jpg a_green_room_with_pipes.jpg a_house_in_a_field_with_trees.jpg a_motel_sign_with_a_snowy_mountain_in_the_background.jpg a_path_in_a_forest.jpg a_path_through_a_forest.jpg a_river_running_through_a_small_town.jpg a_road_with_trees_on_either_side_of_it.jpg a_ski_lift_with_a_chair_in_the_air.jpg a_window_with_a_foggy_view.jpg a_wooden_building_on_a_hill_with_trees_in_the_background.jpg README.md 
cd fauna
cd evangelion
cd basalt
cd ../boccha
cd apeiros
feh *
fe stalenhag/*
feh stalenhag/*
feh weirdcore/*
feh minimal/*
feh unsorted/*
cd data/tools/Yggdrasil
remmina -c group_rdp_yggdrasil_localhost-1337.remmina
remmina
vi group_rdp_yggdrasil_localhost-1337.remmina
cmake
cmake --version
make 
cd source
cd ponkey
ls -a
cd src
rm project-todo.org
cd
cd data/source/ponkey
touch .gitignore
echo "build/" > .gitignore
sudo systemctl --user enable pulseaudio
service bluetooth start
ls emacs
rm -rf emacs
gh repo clone emacs
ls $HOME
ls -a $HOME
ls ~/.emacs.d
./ponkey
cd pox
./pox skljfd.pox
./pox build.ninja
./pox
./pox lkasjdf
./pox cmake_install.cmake
touch test
echo "." >> test
gdb
sudo apt install gdb
gdb ./pox test
clear 1
./pox test
sudo apt install ripgrep
/sbin/ldconfig -p | grep stdc++
sudo apt install libstdc++-dev
sudo apt install libstdc++-14-dev
sudo apt install libstdc++
git stats
git status
git add .
git commit -m "initial commit"
mv .emacs.d prelude
ln -s $DOTFILES/emacs $HOME/.emacs.d
systemctl --user enable pulseaudio
sudo systemctl --user start pulseaudio
systemctl --user start pulseaudio
sudo apt install libenchant-2-dev
sudo apt install hunspell
sudo apt install pkgconf
sudo apt install libenchant-2-2
sudo apt install build-essential
sudo apt install ld
sudo apt install gcc
gcc -I. -O2 -Wall -Wextra -fPIC -shared -o jinx-mod.so jinx-mod.c -I/usr/include/enchant-2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -pthread -lenchant-2
emacs -new
emacs -nw
sudo apt install poppler
sudo apt install poppler-utils
sudo apt-get update\
sudo apt-get install --reinstall build-essential\

sudo apt install binutils
sudo apt upgrade
cd .emacs.d
cd elpa/pdf-tools-20240429.407
cd srver
./configure -q --bindir=/home/slinde/.emacs.d/elpa/pdf-tools-20240429.407/ && make clean && make -s
cd pdf-tools-20240429.407
mak clean
make clean
make -s
cd var
cd lisp
cd etc
cd 
cd data
cd tmep
cd temp
git clone https://github.com/rougier/nano-emacs.git
emacs -q -l nano-emacs/nano.el
cd nano-emacs
emacs -q -l nano.el
gh repo rename
gh repo rename config.el .git/--  filename --                                                
gh repo create
rye
ryel tools
ryel tools install
rye tools install
rye tools install cmake-language-server
curl -sSf https://rye-up.com/get | bash
emacs --debug-init
nvim .config/doom/config.el
emacs
clangd
ccls
sudo apt install clangd
.config/emacs/bin/doom env
which cmake-language-server
cmake-language-seerver
cmake-language-server
    std::cout << response.status_code << std::endl;\
    std::cout << response.header["content-type"] << std::endl;\
kdlafj\

sudo apt-get install libboost-all-devâƒ½¯ sudo apt-get install libboost-all-dev
sudo apt-get install libboost-all-dev
Reading state information... 0% Building dependency tree... 50%Building dependency tree... 0%Reading package lists... 0%
 git clone https://github.com/apache/thrift.git  
./bootstrap.sh
./configureâƒ½¯ ./configure
make
ff Makefile
cd thrift
./configure
cd Downloads
sudo dpkg -i code_1.89.1-1715060508_amd64.deb
cd Downloads/l
cd Downloads/
tar -xf wezterm-nightly.Ubuntu20.04.tar.xz
chmod +x wezterm
cd usr
cd bin
./wezterm
curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /usr/share/keyrings/wezterm-fury.gpg
echo 'deb [signed-by=/usr/share/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *' | sudo tee /etc/apt/sources.list.d/wezterm.list
sudo apt update
sudo apt install wezterm-nightly
wezterm
s
gh repo list
gh repo clone wezterm
ln -s $DOTFILES/wezterm $HOME/.config/wezterm
cd wezterm
nvim wezterm.lua
cd ../build
./ninja
clar
cd ../..
cd tools
curl https://ziglang.org/builds/zig-linux-x86_64-0.13.0-dev.211+6a65561e3.tar.xz
curl https://ziglang.org/builds/zig-linux-x86_64-0.13.0-dev.211+6a65561e3.tar.xz -o zig
untar -xf zig
tar -xf zig
rm -rf zig
mv zig-linux-x86_64-0.13.0-dev.211+6a65561e3 zig
cd zig
./zig
vi $DOTFILES/zsh/zshenv 
cd .config
cd data/source/
vi src/main.cpp
./finlab
cleear
vi $DOTFILES/nvim/init.lua
fgf
sudo apt install tmux
gh repo clone tmux
ln -s $DOTFILES/tmux/tmux.conf $HOME/.tmux.conf
cd $HOME/data/source/finlab
rclear
tmux
cd $DOTFILES
clea
vi nvim
vi wezterm/wezterm.lua
vi nvim/init.lua
sl
rm -rf nvim 
cd nvim 
vi wezterm
gh repo create 
vi init.lua
vi lua/plugins/everforest.lua
vi lua/config/init.lua
rm lua/plugins/init.lua
rm  lua/plugins/treesitter.lua
vi lua/plugins/treesitter.lua
gh repo clone nvim
rm -rf nvim
gh repo clone nvim-dots nvim
rm -rf ~/.local/share/nvim
rm -rf ~/.local/state/nvim
nvim
treesitter
sudo apt install treesitter
rm -rf .local/share/nvim
rm -rf .local/state/nvim
rm -rf .cache/nvim
rm -rf $DOTFILES/nvim
git clone --depth 1 https://github.com/AstroNvim/template $DOTFILES/nvim
cd usr/config
cd nvim
rm -rf .git
neovide
sudo apt install neovide
mkdir rawl
cd rawl
git init
touch CMakeLists.txt
mkdir build
mkdir src
touch src/rawl.cpp
fg
mkdir zawl
cd zawl
zig
zig init
zig build run
vi 
cd ..
cd finlab
vi
cd ../../rawl
cd build
ln -s ./compile_commands.json ../
./rawl
git clone https://github.com/alandefreitas/matplotplusplus/
mv matplotplusplus ../
cd .
ls ..
cmake -GNinja ..
ninja
source $DOTFILES/zsh/zshenv
cd ../../zawl
zig fetch --save https://pkg.machengine.org/mach/205a1f33db0efe40a218e793937e7b686ac117dc.tar.gz
zig build
cd tmux
vi tmux.conf
vi tmux/tmux.conf
ls
clear
exit
cd usr/config
vi wezterm/wezterm.lua
cd nvmi
cd nvim
ls
sway
clear
vi
sudo apt install sway
clear
cd usr/config
cd
ls
ls -a
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
tmux
git pull
cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo 
rm -rf $HOME/.local/state/nvim
rm -rf $HOME/.cache/nvim
vi --help
cd data/tools/neovim
sudo make uninstall
sudo make remove
sudo make clean
sudo apt-get install ninja-build gettext cmake unzip curl build-essential
sudo apt update
sudo apt upgrade
sudo make CMAKE_BUILD_TYPE=RelWithDebInfo 
sudo nvim
cd ..
rm -rf neovim
sudo rm -rf neovim
https://github.com/neovim/neovim.git
git clone https://github.com/neovim/neovim.git
make CMAKE_BUILD_TYPE=RelWithDebInfo 
cd ~/.local/share/nvim/
rm -rf telescope_history
cd usr/config/nvim
vi --clean
rm -rf ~/.local/share/nvim
rm -rf ~/.local/state/nvim
rm -rf ~/.cache/nvim
cd /usr
cd bin
rm -rf nvim
cd 
cd ~
cd data/tools
cd neovim
rm -rf build
git checkout stable
make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
sudo apt install neovim
nvim
ls
cd $DOTFILES/nvim
vi --clean lua/plugins/astrolsp.lua
vi
nvim -u NORC
clear
rm -rf /usr/local/share/nvim
sudo rm -rf /usr/local/share/nvim
rm -rf ~/.local/share/nvim
rm -rf ~/.local/state/nvim
rm -rf .cache/nvim
sudo rm /usr/bin/nvim
cd data/tools
cd neovim
ls
rm -rf build
make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
vi
clear
vi /usr/local/share/nvim/runtime/lua
nvim
sudo rm -rf /usr/local/share/nvim
rm -rf .local/share/nvim
rm -rf .local/state/nvim
rm -rf .cache
sudo rm /usr/bin/nvim
sudo rm /usr/local/bin/nvim
cd data/tools
cd neovim
ls
git checkout main
git checkout master
git pull
rm -rf build
make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
clear
vi --clean
vi
nvim
vi
vi --clean
cd data
cd source
mkdir dag
cd dag
rye init
ls
clear
rye sync
rye tools install sphinx
rye tools install pynvim
vi
